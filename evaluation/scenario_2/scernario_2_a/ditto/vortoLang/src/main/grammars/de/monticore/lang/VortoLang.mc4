package de.monticore.lang;

grammar VortoLang extends de.monticore.lang.StructureLang  {

  VortoCompilationUnit = StructureDefinitionCompilationUnit;

  scope symbol FunctionBlock implements ITypeDefinition = "functionblock" Name ["singleton"]? ITypeExtension?  "{"
    (ITypeElement | IMethodDefinition | IPropertyDefinition)+
  "}";

  SuperType implements ITypeExtension = "superType" Name;

  Tags implements ITypeElement = "tags" "{" (Tag | ",")+ "}";
  Tag = "[" StringLiteral "," StringLiteral "]";

  symbol PropertyDefinition implements IPropertyDefinition = "propertyDefinition" ["externallyStored"]? ["externalId"]?
    ["timeSeries"]? ["requiredEntity"]? Type Name ("=" defaultValue:Expression)?  ";";

  symbol Operation implements IMethodDefinition = "function" Name "implementedBy" QualifiedName ["requires"]?
      IMethodParameter* ";";

  OperationParameter implements IMethodParameter = param:Name;

  ModelReference implements IAssociation = "reference" type:StringLiteral? target:Name ";";



}