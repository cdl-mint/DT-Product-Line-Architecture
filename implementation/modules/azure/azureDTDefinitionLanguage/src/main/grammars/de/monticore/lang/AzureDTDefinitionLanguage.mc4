package de.monticore.lang;

grammar AzureDTDefinitionLanguage extends de.monticore.lang.StructureLang {

  DTDLCompilationUnit = StructureDefinitionCompilationUnit;

  ////////////// DTMI //////////////
  interface DTMI extends ITypeElement;
  Version implements DTMI = "version" SignedInteger ";";
  Schema implements DTMI = "schema" Type ";";
  Path implements DTMI = "path" QualifiedName ";";
  ID implements DTMI = "id" StringLiteral ";";

  ////////////// DTELement //////////////
  interface DTElement;
  DisplayName implements DTElement = "display" Name ";";
  Description implements DTElement = "description" StringLiteral ";";
  DTDLComment implements DTElement = "comment" StringLiteral ";";

  ////////////// Interface //////////////
  InterfaceDefinition implements ITypeDefinition = "interface" Name ITypeExtension? "{"
    (ITypeElement | IMethodDefinition | IPropertyDefinition)*
  "}";

  InterfaceExtension implements ITypeExtension = "extends" Name;

  interface DTDLContent extends ITypeElement;

  Context implements DTDLContent = "context" StringLiteral ";";

  ////////////// Command //////////////
  Command implements IMethodDefinition = "command" Name "{" IMethodParameter* "}" ";";
 
  Request implements IMethodParameter = "request" "{" paramName:Name "{" (DTMI | DTElement)+ "}" "}";
  Response implements IMethodParameter = "response" "{" paramName:Name "{" (DTMI | DTElement)+ "}" "}";

  ////////////// Property //////////////
  Property implements IPropertyDefinition = "property" ["writable"]? Type Name ";";

  ////////////// Telemetry //////////////
  Telemetry implements IPropertyDefinition = "telemetry" Type Name ";";

  ////////////// Relationship //////////////
  Relationship implements IAssociation = "relationship" ["writable"]? Name
                                        ("[" min:SignedInteger "," max:SignedInteger "]")? target:Name ";";

}