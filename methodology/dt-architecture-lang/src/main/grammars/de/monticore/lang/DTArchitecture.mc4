package de.monticore.lang;

grammar DTArchitecture extends de.monticore.types.Types {

  DTArchitectureDef = PackageDeclaration? TemplateImportStatement+ "refarch" Name "{" ArchitectureDefBody "}";
  PackageDeclaration = ("package" QualifiedName ";" );
  TemplateImportStatement extends ImportStatement = "import" import:(Name || ".")+ ("." Star:["*"])? ("as" instanceName:Name)? ";";

  ArchitectureDefBody = (SoftwareArchitecture | LanguageArchitecture)+;

  SoftwareArchitecture = "software" "{" (ComponentDef | ConnectorDef)+ "}";
  ComponentDef = "component" Type Name ";";
  ConnectorDef = "connect" source:QualifiedName "->" target:QualifiedName ";";

  LanguageArchitecture = "language" "{" (source:QualifiedName "->" target:QualifiedName ";")+ "}";
}